<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Уязвимости</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f4f4f4;
        }

        .success {
            color: green;
        }

        .error {
            color: red;
        }
    </style>
</head>
<body>

<form id="scanForm" method="POST">
    <label for="ipAddress">Поиск (ip/домен)</label>
    <input type="text" id="ipAddress" name="ipAddress" required>
    <button type="submit">Запустить скан</button>
</form>

<div class="scannedVulns">

</div>

<h1>Уязвимости на момент: <%= moment %></h1>
<div class="vulnerabilities">
    <% vulnerabilities.forEach(function(vulnerability) { %>
        <div class="vulnerability">
            <h1 class="id">ID: <%= vulnerability.id %></h1>
            <p>DESCRIPTION: <%= vulnerability.info %></p>
            <p>DATE: <%= vulnerability.date %></p>
        </div>
    <% }); %>
</div>

<script>
    const localToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxvY2FsIiwiaWF0IjoxNzMzNjMyNjI1fQ.ooWOzdzd3tfuedi8eMYveMB7Rx2TUv_YYPJ3eXfsTM8';

    document.getElementById('scanForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        const input = document.getElementById('ipAddress').value;

        const ipRegex = /^(\d{1,3}\.){3}\d{1,3}$/;

        const domainRegex = /^(?!:\/\/)([a-zA-Z0-9-_]+\.)+[a-zA-Z]{2,}$/;

        if (!ipRegex.test(input) && !domainRegex.test(input)) {
            alert('Введите корректный IP-адрес или доменное имя.');
            return;
        }

        await fetch('http://localhost:8080/api/v1/scanIp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                authorization: `Bearer ${localToken}`
            },
            body: JSON.stringify({ ip: input })
        })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'OK') {
                    alert('Успешно!');

                    const vulnsData = data.data;

                    const scannedVulnsDiv = document.querySelector('.scannedVulns');

                    scannedVulnsDiv.innerHTML = '';

                    if (vulnsData && vulnsData.status === 'уязвим') {
                        vulnsData.vulns.forEach(vuln => {
                            const status = vuln.verified ? 'Проверено' : 'Не проверено';

                            const ports = vuln.ports.join(', ');

                            const vulnElement = document.createElement('div');
                            vulnElement.classList.add('vuln-item');
                            vulnElement.innerHTML = `
                    <h3>${vuln.name || 'Неизвестное название'}</h3>
                    <p><strong>Статус:</strong> ${status || 'Неизвестен'}</p>
                    <p><strong>Описание:</strong> ${vuln.summary || 'Нет описания'}</p>
                    <p><strong>Порты:</strong> ${ports || 'Нету информации'}</p>
                    <p><strong>Оценка CVSS:</strong> ${vuln.cvss || 'Не указано'}</p>
                `;
                            scannedVulnsDiv.appendChild(vulnElement);
                        });
                    } else {
                        const noDataMessage = document.createElement('p');
                        noDataMessage.textContent = 'Не найдено уязвимостей.';
                        scannedVulnsDiv.appendChild(noDataMessage);
                    }
                } else {
                    alert('Произошла непредвиденная ошибка!');
                }
            })

            .catch(err => console.error('Ошибка:', err));
    });

    function showAlert(message, type = 'success') {
        const alert = document.createElement('div');
        alert.textContent = message;
        alert.className = type;
        document.body.appendChild(alert);
        setTimeout(() => alert.remove(), 3000);
    }
</script>
</body>
</html>